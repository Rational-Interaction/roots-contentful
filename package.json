{
  "name": "roots-contentful",
  "description": "An extension for using roots with the API-driven Contentful CMS",
  "version": "0.0.9",
  "author": "Carrot Creative",
  "bugs": {
    "url": "https://github.com/carrot/roots-contentful/issues"
  },
  "dependencies": {
    "babel-runtime": "^6.3.13",
    "contentful": "^1.1.5",
    "pluralize": "^1.2.1",
    "roots-util": "0.1.x",
    "underscore.string": "^3.2.2"
  },
  "devDependencies": {
    "ava": "sindresorhus/ava#65ae07c",
    "babel-cli": "^6.3.15",
    "babel-core": "^6.3.26",
    "babel-eslint": "^4.1.6",
    "babel-plugin-add-module-exports": "^0.1.2",
    "babel-preset-es2015-node5": "^1.1.1",
    "babel-preset-stage-0": "^6.3.13",
    "coffee-script": "^1.10.0",
    "coveralls": "^2.11.6",
    "husky": "^0.10.2",
    "mockery": "1.4.x",
    "nyc": "^5.2.0",
    "roots": "3.1.0",
    "snazzy": "^2.0.1",
    "standard": "^5.4.1"
  },
  "directories": {
    "lib": "lib",
    "test": "test"
  },
  "engines": {
    "node": ">=5.0.0",
    "npm": ">=3.0.0"
  },
  "homepage": "https://github.com/carrot/roots-contentful",
  "keywords": [
    "cms",
    "content",
    "contentful",
    "dynamic",
    "extension",
    "management",
    "plugin",
    "roots",
    "roots-extension",
    "system"
  ],
  "license": "MIT",
  "main": "lib",
  "repository": {
    "type": "git",
    "url": "https://github.com/carrot/roots-contentful.git"
  },
  "scripts": {
    "build": "babel src -d lib",
    "precoverage": "nyc npm test",
    "coverage": "nyc report --reporter=text-lcov | coveralls",
    "lint": "standard --verbose | snazzy",
    "postpublish": "git push --follow-tags",
    "prebuild": "npm test",
    "precommit": "npm run lint -s",
    "precoveralls": "npm run coverage",
    "prerelease": "npm run build",
    "pretest": "npm run lint -s",
    "release": "npm publish",
    "test": "nyc ava --require babel-core/register --require coffee-script/register"
  },
  "standard": {
    "parser": "babel-eslint",
    "globals": [
      "describe",
      "it",
      "before",
      "after",
      "beforeAll",
      "afterAll"
    ]
  }
}
